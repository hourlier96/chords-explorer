[tool.ruff]
line-length = 100
target-version = "py313"

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
]

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes errors
    "W",  # pycodestyle warnings
    "I",  # import conventions
    "N",  # naming conventions
    "D",  # docstring conventions
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line with quotes
    "D203",  # 1 blank line required before class docstring
    "D205",  # 1 blank line required after class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D415",  # First line should not be capitalized
    "D417",  # Missing argument descriptions in the docstring
    "E402",  # Module level import not at top of file
    "E501",  # Line too long
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true

[tool.mypy]
explicit_package_bases = true
follow_untyped_imports = true

# https://github.com/pytest-dev/pytest-asyncio/issues/924
[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
